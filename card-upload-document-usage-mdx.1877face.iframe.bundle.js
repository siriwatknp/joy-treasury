"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[5976],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/card-upload-document/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardUploadDocumentraw_namespaceObject='import React, { useCallback } from "react";\nimport { DropzoneRootProps, useDropzone } from "react-dropzone";\nimport { Typography } from "@mui/joy";\nimport Box from "@mui/joy/Box";\nimport Button from "@mui/joy/Button";\nimport Card from "@mui/joy/Card";\nimport CardContent from "@mui/joy/CardContent";\nimport SvgIcon from "@mui/joy/SvgIcon";\n\nexport default function CardUploadDocument() {\n  const onDrop = useCallback((acceptedFiles: File[]) => {\n    // Do something with the files\n    alert(`${acceptedFiles.length} files uploaded.`);\n  }, []);\n  const { getRootProps, isDragActive } = useDropzone({\n    onDrop,\n    noClick: true,\n    noKeyboard: true,\n  });\n\n  return (\n    <Card\n      {...(getRootProps() as Omit<DropzoneRootProps, "color">)}\n      variant="plain"\n      sx={{ minWidth: 300, borderRadius: "xl", boxShadow: "lg" }}\n      size="sm"\n    >\n      <CardContent\n        sx={{\n          border: "1px dashed",\n          borderColor: isDragActive\n            ? "var(--variant-outlinedBorder, var(--joy-palette-neutral-outlinedBorder, var(--joy-palette-neutral-300, #CDD7E1)))"\n            : "transparent",\n          padding: "2rem",\n          textAlign: "center",\n          alignItems: "center",\n          borderRadius: "var(--Card-radius)",\n          gap: "1rem",\n        }}\n      >\n        <div>\n          <Typography level="title-md">Drop document here</Typography>\n          <Typography level="body-sm">or upload it manually</Typography>\n        </div>\n        <Button\n          component="label"\n          role={undefined}\n          tabIndex={-1}\n          sx={{ borderRadius: "xl" }}\n          color="primary"\n          endDecorator={\n            <SvgIcon>\n              <svg\n                xmlns="http://www.w3.org/2000/svg"\n                width="24"\n                height="24"\n                viewBox="0 0 24 24"\n                fill="none"\n                stroke="currentColor"\n                stroke-width="2"\n                stroke-linecap="round"\n                stroke-linejoin="round"\n              >\n                <path d="M5 12h14" />\n                <path d="M12 5v14" />\n              </svg>\n            </SvgIcon>\n          }\n        >\n          Upload manually\n          <Box\n            component="input"\n            type="file"\n            sx={{\n              clip: "rect(0 0 0 0)",\n              clipPath: "inset(50%)",\n              height: "1px",\n              overflow: "hidden",\n              position: "absolute",\n              bottom: 0,\n              left: 0,\n              whiteSpace: "nowrap",\n              width: "1px",\n            }}\n          />\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",p:"p",a:"a",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Upload/Document"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,jsx_runtime.jsxs)(_components.p,{children:["This block uses ",(0,jsx_runtime.jsx)(_components.a,{href:"https://react-dropzone.js.org/",target:"_blank",rel:"nofollow noopener noreferrer",children:"react-dropzone"})," to implement the drag-and-drop experience."]}),"\n",(0,jsx_runtime.jsx)(_components.p,{children:"Make sure to install it in your project in order to use this block:"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone card-upload-document\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"carduploaddocument",children:"CardUploadDocument"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardUploadDocumentraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);