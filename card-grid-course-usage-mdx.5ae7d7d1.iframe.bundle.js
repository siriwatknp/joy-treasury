"use strict";(self.webpackChunkjoy_treasury=self.webpackChunkjoy_treasury||[]).push([[4233],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./blocks/card-grid-course/usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>usage});__webpack_require__("./node_modules/react/index.js");var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),lib=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),dist=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs");const CardGridCourseraw_namespaceObject='import React from \'react\'\nimport type { FC, ReactNode } from "react";\nimport { Link, SvgIcon } from "@mui/joy";\nimport Card from "@mui/joy/Card";\nimport Typography from "@mui/joy/Typography";\n\nexport const COLORS = {\n  white: "#FFF",\n  vodka: "#B6B9EE",\n  iris: "#434BD2",\n  coolGrey: "#8D8EAD",\n} satisfies Record<string, `#${string}`>;\n\nexport type CardGridCourseProps = {\n  icon: ReactNode;\n  title: string;\n  description: string;\n  url: string;\n};\n\nconst TRANSITION_ALL = "all .25s ease-out";\n\nconst CardGridCourse: FC<CardGridCourseProps> = ({\n  icon,\n  title,\n  description,\n  url = "#",\n}) => {\n  return (\n    <Card\n      variant="solid"\n      sx={{\n        transition: TRANSITION_ALL,\n        bgcolor: COLORS.white,\n        "&:focus-within": {\n          transform: "scale(1.05)",\n        },\n        ":hover": {\n          bgcolor: COLORS.iris,\n\n          ".card--title > a, .card--icon-arrow": {\n            color: COLORS.white,\n          },\n\n          ".card--description": {\n            color: COLORS.vodka,\n          },\n        },\n      }}\n    >\n      {icon}\n      {/* <icon className="card--icon" sx={{ color: COLORS.iris }} /> */}\n      <Typography // <span>\n        className="card--title"\n        level="h3"\n        sx={{ color: COLORS.iris }}\n      >\n        <Link // <a>\n          overlay\n          href={url}\n          sx={{\n            color: COLORS.iris,\n            ":hover": { textDecoration: "none" },\n          }}\n        >\n          {title}\n        </Link>\n      </Typography>\n      <Typography\n        className="card--description"\n        level="body-sm"\n        sx={{\n          color: COLORS.coolGrey,\n          "-webkit-hyphen": "auto",\n        }}\n      >\n        {description}\n      </Typography>\n\n      <SvgIcon\n        className="card--icon-arrow"\n        sx={{ color: COLORS.iris, ml: "auto" }}\n      >\n        <svg\n          xmlns="http://www.w3.org/2000/svg"\n          fill="none"\n          viewBox="0 0 24 24"\n          strokeWidth={1.5}\n          stroke="currentColor"\n          className="w-6 h-6"\n        >\n          <path\n            strokeLinecap="round"\n            strokeLinejoin="round"\n            d="M13.5 4.5L21 12m0 0l-7.5 7.5M21 12H3"\n          />\n        </svg>\n      </SvgIcon>\n    </Card>\n  );\n};\n\nexport default CardGridCourse;\n';function _createMdxContent(props){const _components=Object.assign({h2:"h2",pre:"pre",code:"code"},(0,lib.ah)(),props.components);return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(dist.h_,{title:"Card/Grid/Course"}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cli",children:"CLI"}),"\n",(0,jsx_runtime.jsx)(_components.pre,{children:(0,jsx_runtime.jsx)(_components.code,{className:"language-sh",children:"npx joy-treasury@latest clone card-grid-course\n"})}),"\n",(0,jsx_runtime.jsx)(_components.h2,{id:"cardgridcourse",children:"CardGridCourse"}),"\n",(0,jsx_runtime.jsx)(dist.Hw,{code:CardGridCourseraw_namespaceObject,language:"tsx"})]})}const usage=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,lib.ah)(),props.components);return MDXLayout?(0,jsx_runtime.jsx)(MDXLayout,Object.assign({},props,{children:(0,jsx_runtime.jsx)(_createMdxContent,props)})):_createMdxContent(props)}}}]);